---
import type {
  GetStaticPaths,
  InferGetStaticParamsType,
  InferGetStaticPropsType,
} from "astro";
import { Image } from "astro:assets";
import { getCollection, getEntry, render } from "astro:content";

export const getStaticPaths = (async () => {
  const posts = await getCollection("posts");
  return posts.map((post) => {
    return {
      params: { id: post.id },
      props: post.data,
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { id } = Astro.params as Params;
const { thumbnail } = Astro.props as Props;

const post = await getEntry("posts", id);
if (post === undefined) {
  return Astro.redirect("/404");
}

const { Content } = await render(post);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Post - {id}</title>
  </head>
  <body>
    <h1>Post - {id}</h1>
    <Image src={thumbnail} alt={id} />
    <Content />
    <p>--------------------</p>
    <p>{post.body}</p>
  </body>
</html>
